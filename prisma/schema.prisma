generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  likes         Like[]
  topAnimes     TopAnime[]
  list          List?          @relation
  listId        String?        @unique
}

model Like {
  id        String   @id @default(cuid())
  title     String
  rating    Float    @default(0)
  animeId   String
  userId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TopAnime {
  id        String   @id @default(cuid())
  title     String
  rating    Float    @default(0)
  animeId   String
  userId    String
  rank      Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WatchedList {
  id        String   @id @default(cuid())
  title     String
  rating    Float?   @default(0)
  animeId   String
  userId    String
  createdAt DateTime @default(now())
  list      List?    @relation(fields: [listId], references: [id])
  listId    String?
}

model WatchingList {
  id        String   @id @default(cuid())
  title     String
  rating    Float?   @default(0)
  animeId   String
  userId    String
  createdAt DateTime @default(now())
  list      List?    @relation(fields: [listId], references: [id])
  listId    String?
}

model ToWatchList {
  id        String   @id @default(cuid())
  title     String
  rating    Float?   @default(0)
  animeId   String
  userId    String
  createdAt DateTime @default(now())
  list      List?    @relation(fields: [listId], references: [id])
  listId    String?
}

model List {
  id           String         @id @default(cuid())
  userId       String         @unique
  watchedList  WatchedList[]
  watchingList WatchingList[]
  toWatchList  ToWatchList[]
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}
